@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  --wave-amp: 10px;
  --wave-period: 100px;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

main {
  overflow-x: hidden;
}

a {
  color: inherit;
  text-decoration: none;
}

section {
  width: 60vw;
  position: relative;
  margin: auto;
  padding: 40px;
}

.wrapper {
  max-width: 60rem;
}

.wave {
  width: calc(100vw + var(--wave-amp) + var(--wave-amp));
  left: calc(-0.5 * var(--wave-amp));
  isolation: isolate;
}

.wave-wrapper {
  margin: auto;
  max-width: 50rem;
}

.wave::before {
  content: "";
  position: absolute;
  z-index: -1;
  width: 150%;
  height: calc(2 * var(--wave-amp));

  background-color: white;
  mask-image: url("wave.svg");
  mask-repeat: repeat-x;
  top: -0.3px;
  --ampmult: 4;
  animation: 6s ease infinite forwards waveflow;
}

.wave700::before {
  background-color: #1d4ed8;
}

.wave500::before {
  background-color: #3b82f6;
}

.waveBig::before {
  height: calc(4 * var(--wave-amp));

  mask-size: calc(var(--wave-period) * 1.25) calc(var(--wave-amp) * 6);
  animation: 6s ease infinite forwards waveflowBig;
}

.waveStatic::before {
  height: calc(3 * var(--wave-amp));
  animation: none;
  mask-size: calc(8 * var(--wave-period)) calc(var(--wave-amp) * 12);
  transform: translate(calc(-2.25 * var(--wave-period)));
}

@keyframes waveflow {
  from {
    mask-size: var(--wave-period) calc(var(--wave-amp) * var(--ampmult));

    transform: translate(calc(-2 * var(--wave-period)));
  }

  50% {
    mask-size: calc(0.95 * var(--wave-period))
      calc(2 * var(--wave-amp) * var(--ampmult));
  }

  100% {
    mask-size: var(--wave-period) calc(var(--wave-amp) * var(--ampmult));
    transform: translate(calc(-1 * var(--wave-period)));
  }
}

@keyframes waveflowBig {
  from {
    mask-size: calc(var(--wave-period) * 1.25) calc(var(--wave-amp) * 8);

    transform: translate(calc(-1 * var(--wave-period) * 1.25));
  }

  50% {
    mask-size: calc(1.5 * var(--wave-period)) calc(2 * var(--wave-amp) * 8);
  }

  100% {
    mask-size: calc(var(--wave-period) * 1.25) calc(var(--wave-amp) * 8);
    transform: translate(calc(-2 * var(--wave-period) * 1.25));
  }
}

.nav-link {
  position: relative;
}

.nav-link::after {
  transition: all 0.2s ease-in-out;
  transform: scale(0);
  position: absolute;
  content: "";
  background-color: #1c64f2;
  top: 30%;
  right: -20px;
  width: 10px;
  height: 10px;
  border-radius: 100%;
}

.nav-link > div:hover {
  animation: 300ms ease-out forwards bounce;
}

.nav-link:hover::after {
  transform: scale(1);
}

@keyframes bounce {
  40% {
    transform: rotate(5deg);
  }
  80% {
    transform: rotate(-5deg);
  }
}
